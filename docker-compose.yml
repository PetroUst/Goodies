version: '3.8'

services:
  mysql:
    image: mysql
    ports:
      - 3306:3306
    environment: 
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: urls

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
  
  redis:
    image: redis:latest
    ports:
      - 6379:6379    


#  kafka:
#    image: bitnami/kafka:latest
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_LISTENERS: PLAINTEXT://:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#    ports:
#      - 9092:9092
#
#  zookeeper:
#    image: bitnami/zookeeper:latest
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: "yes"


  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181


  app:
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - mongo
      - redis
      - kafka
      - zookeeper
    environment:
      mysql: mysql
      mongo: mongo
      redis: redis